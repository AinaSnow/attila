{{!< default}}

{{!-- Everything inside the #post tags pulls data from the post --}}
{{#post}}

{{#match @page.show_title_and_feature_image}}
	<header class="post-header {{#if feature_image}} has-cover {{/if}}">
		<div class="inner">
			<h1 class="post-title">{{{title}}}</h1>
			{{#if feature_image}}
			<div class="post-cover cover">
				<img
				srcset="{{img_url feature_image size="s"}} 320w,
								{{img_url feature_image size="m"}} 640w,
								{{img_url feature_image size="l"}} 960w,
								{{img_url feature_image size="xl"}} 1920w"
				src="{{img_url feature_image size="xl"}}"
				alt="{{title}}" />
			</div>
			{{/if}}
		</div>
	</header>
{{/match}}

<main class="content" role="main">
	<article class="{{post_class}}">
		<div class="inner">

			<section class="post-content">
				{{content}}
			</section>

		</div>
	</article>
</main>

{{/post}}

{{!-- The #contentFor helper here will send everything inside it up to the matching #block helper found in default.hbs --}}
{{#contentFor "scripts"}}
<script>
	document.addEventListener("DOMContentLoaded", function () {
		//responsive videos
		const sources = [
			'.post-content iframe[src*="youtube.com"]',
			'.post-content iframe[src*="youtube-nocookie.com"]',
			'.post-content iframe[src*="player.vimeo.com"]',
			'.post-content iframe[src*="kickstarter.com"][src*="video.html"]',
			'.post-content object',
			'.post-content embed',
		];
		reframe(document.querySelectorAll(sources.join(',')));
	});
	
	document.addEventListener("DOMContentLoaded", function () {
		// Format code blocks and add line numbers
		function codestyling() {
			// Select all `pre code` elements
			document.querySelectorAll('pre code').forEach(function (codeBlock) {
			// Code highlight
			hljs.highlightElement(codeBlock);

			// Skip plain text blocks
			if (!codeBlock.classList.contains('language-text')) {
				// Calculate the number of lines
				var lines = codeBlock.innerHTML.split(/\n(?!$)/g).length;
				if (lines > 1) lines++; // Account for extra line

				// Generate line numbers
				var numbers = Array.from({ length: lines - 1 }, (_, i) => {
				return `<span class="line" aria-hidden="true">${i + 1}</span>`;
				}).join('');

				// Create and append the lines container
				var linesContainer = document.createElement('div');
				linesContainer.className = 'lines';
				linesContainer.innerHTML = numbers;
				codeBlock.parentNode.appendChild(linesContainer);
			}
			});
		}
		codestyling();
	});
</script>
{{/contentFor}}
